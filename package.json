{
  "name": "thinfilmchallenge",
  "version": "1.0.0",
  "description": "coding challenge",
  "main": "index.js",
  "keywords": [],
  "author": "Timothy Shiu <timoweave@gmail.com>",
  "license": "ISC",
  "dependencies": {
    "@types/react": "^15.6.0",
    "@types/react-dom": "^15.5.1"
  },
  "devDependencies": {
    "awesome-typescript-loader": "^3.2.2",
    "axios": "^0.16.2",
    "babel-cli": "^6.24.1",
    "babel-core": "^6.25.0",
    "babel-loader": "^7.1.1",
    "babel-plugin-autobind-class-methods": "^5.0.1",
    "babel-plugin-react-html-attrs": "^2.0.0",
    "babel-plugin-syntax-async-functions": "^6.13.0",
    "babel-plugin-transform-async-to-generator": "^6.24.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-decorators": "^6.24.1",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-classes": "^6.24.1",
    "babel-plugin-transform-es2015-template-literals": "^6.22.0",
    "babel-plugin-transform-imports": "^1.4.1",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-plugin-transform-regenerator": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.0",
    "babel-preset-es2017": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "bluebird": "^3.5.0",
    "body-parser": "^1.17.2",
    "commander": "^2.11.0",
    "css-loader": "^0.28.4",
    "express": "^4.15.3",
    "extract-text-webpack-plugin": "^3.0.0",
    "favicons-webpack-plugin": "0.0.7",
    "file-loader": "^0.11.2",
    "font-awesome-webpack": "0.0.5-beta.2",
    "html-webpack-plugin": "^2.29.0",
    "jquery": "^3.2.1",
    "material-ui": "^0.18.7",
    "material-ui-search-bar": "^0.3.0",
    "moment": "^2.18.1",
    "moment-timezone": "^0.5.13",
    "mongoose": "^4.11.4",
    "mongoose-validators": "^0.1.0",
    "node-sass": "^4.5.3",
    "nodemon": "^1.11.0",
    "react": "^15.6.1",
    "react-bootstrap": "^0.31.1",
    "react-burger-menu": "^2.1.4",
    "react-dom": "^15.6.1",
    "react-icons-kit": "^1.0.7",
    "react-promise": "^1.1.3",
    "react-redux": "^5.0.5",
    "react-responsive-sidebar": "^0.1.16",
    "react-router": "^4.1.2",
    "react-router-dom": "^4.1.2",
    "react-search-input": "^0.11.2",
    "react-sidebar": "^2.3.2",
    "react-sidenav": "^2.1.2",
    "react-tap-event-plugin": "^2.0.1",
    "react-toolbox": "^2.0.0-beta.12",
    "react-tools": "^0.13.3",
    "react-transform": "0.0.3",
    "react-transform-hmr": "^1.0.4",
    "redux": "^3.7.2",
    "redux-devtools-extension": "^2.13.2",
    "redux-logger": "^3.0.6",
    "redux-promise-middleware": "^4.3.0",
    "redux-thunk": "^2.2.0",
    "remarkable": "^1.7.1",
    "sass-loader": "^6.0.6",
    "source-map-loader": "^0.2.1",
    "stats-webpack-plugin": "^0.6.1",
    "style-loader": "^0.18.2",
    "typescript": "^2.4.2",
    "url-loader": "^0.5.9",
    "webpack": "^3.4.1",
    "webpack-dev-middleware": "^1.11.0",
    "webpack-dev-server": "^2.6.1",
    "webpack-hot-middleware": "^2.18.2"
  },
  "scripts": {
    "curl_download": "echo 'NOTE: use your login/password to curl'; echo 'curl -O https://www.kaggle.com/mcdonalds/nutrition-facts/downloads/menu.csv'; echo '';",
    "dockers": "npm run mongo_docker; npm run host_docker",
    "mongo_shell": "mongo --quiet localhost:27017/nutrition",
    "mongo_import": "mongoimport --host localhost:27017 --db nutrition --type csv --headerline --file mcdonalds.csv",
    "mongo_docker": "docker run -dit --rm -p 27017:27017 --name mongo -v ${PWD}:${PWD} -w ${PWD} mongo",
    "host_docker": "docker run -dit --rm -p 8080:8080 --name node --link mongo:mongo -v ${PWD}:${PWD} -w ${PWD} node bash",
    "host_babel": "babel server.js6 -w -o host.js",
    "host_watch": "nodemon host.js --verbose -i server.js6 -i database.js -i store.js -i client.jsx -i index.js -i index.js.map -i index.html -i index.css",
    "host_shell": "node -i -e 'const server=require(\"./host.js\"); const {App, run} = server; app = run();'",
    "index_webpack": "webpack --config webpack.config.js",
    "index_shell": "node -i -e 'const utils=require(\"./utils.js\"); const config = require(\"./webpack.config.js\"); const {watch} = utils; watch(config);'",
    "index_server": "webpack-dev-server",
    "start": "node host.js --port 8080 --mongo mongodb://localhost:27017/nutrition",
    "test": "echo \"Error: no test specified\" && exit 1"
  }
}
